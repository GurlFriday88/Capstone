// <auto-generated />
using Capstone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Capstone.Migrations
{
    [DbContext(typeof(CapstoneDBContext))]
    [Migration("20180507010526_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capstone.Models.AutoMemo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ID");

                    b.ToTable("AutoMemos");
                });

            modelBuilder.Entity("Capstone.Models.BcbsPrefix", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Prefix");

                    b.Property<int>("ProviderID");

                    b.HasKey("ID");

                    b.HasIndex("ProviderID");

                    b.ToTable("BcbsPrefixes");
                });

            modelBuilder.Entity("Capstone.Models.MemoChoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AutoMemoID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("AutoMemoID");

                    b.ToTable("MemoChoices");
                });

            modelBuilder.Entity("Capstone.Models.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Exam");

                    b.Property<string>("Frames");

                    b.Property<string>("Lens");

                    b.Property<string>("PatientType");

                    b.Property<int>("ProviderID");

                    b.HasKey("ID");

                    b.HasIndex("ProviderID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Capstone.Models.Provider", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthNote");

                    b.Property<string>("BenefitRenewal");

                    b.Property<string>("MiscNotes");

                    b.Property<string>("Name");

                    b.Property<int>("PagesToSave");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SavedPagesDescription");

                    b.Property<string>("SubscriberNumber");

                    b.HasKey("ID");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumeber");

                    b.Property<string>("State");

                    b.Property<int>("ZipCode");

                    b.HasKey("ID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Capstone.Models.BcbsPrefix", b =>
                {
                    b.HasOne("Capstone.Models.Provider")
                        .WithMany("BcbsPrefixes")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capstone.Models.MemoChoice", b =>
                {
                    b.HasOne("Capstone.Models.AutoMemo")
                        .WithMany("MemoChoices")
                        .HasForeignKey("AutoMemoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capstone.Models.Patient", b =>
                {
                    b.HasOne("Capstone.Models.Provider")
                        .WithMany("PatientType")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
